@import "/styles/tokens.css";
/*
 * MASTER CSS RESET & FOUNDATION
 * Contains: CSS Reset, Design Tokens, and Base Element Styles.
 * All component-specific styles should be in their own scoped files.
*/

/* === FONT FACES === */
@font-face {
	font-family: "Roboto";
	src: url("/fonts/Roboto-VariableFont_wdth,wght.ttf") format("truetype");
	font-weight: 100 900;
	font-stretch: 75% 125%;
	font-display: swap;
}

@font-face {
	font-family: "Merriweather";
	src: url("/fonts/Merriweather-VariableFont_opsz,wdth,wght.ttf")
		format("truetype");
	font-weight: 100 900;
	font-stretch: 75% 125%;
	font-display: swap;
}

@font-face {
	font-family: "Inter";
	src: url("/fonts/Inter-VariableFont_opsz,wght.ttf") format("truetype");
	font-weight: 100 900;
	font-optical-sizing: auto;
	font-display: swap;
}

@font-face {
	font-family: "JetBrains Mono";
	src: url("/fonts/JetBrainsMono-VariableFont_wght.ttf") format("truetype");
	font-weight: 100 900;
	font-display: swap;
	font-feature-settings: "liga" 1, "calt" 1;
}

/* === DESIGN TOKENS === */
/* Tokens are now imported from /styles/tokens.css */

/* Clean post date styling */
.post-date-timeline {
	display: inline-flex;
	align-items: baseline;
	gap: 0.4em;
	font-size: 0.85em;
	color: rgba(var(--color-text-rgb, 24, 28, 23), 0.7);
}

.post-date-primary {
	font-weight: 500;
	color: rgba(var(--color-text-rgb, 24, 28, 23), 0.8);
}

.post-date-context {
	font-size: 0.9em;
	color: rgba(var(--color-text-rgb, 24, 28, 23), 0.5);
	font-style: italic;
}

/* === CSS RESET === */
*,
*::before,
*::after {
	margin: var(--space-none);
	padding: var(--space-none);
}

html {
	font-size: var(--font-size-base);
	line-height: var(--line-height-default);
	-webkit-text-size-adjust: 100%;
	scroll-behavior: smooth;
	tab-size: var(--tab-size);
	overflow-x: hidden;
	scrollbar-gutter: var(--scrollbar-gutter);
	-webkit-tap-highlight-color: var(--tap-highlight-color);
}

body {
	min-height: 100vh;
	width: 100%;
	font-family: var(--font-family-base);
	font-weight: var(--font-weight-regular);
	background: var(--color-bg);
	color: var(--color-text);
	text-rendering: optimizeSpeed;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	line-height: var(--line-height-body);

	/* Add spacing for fixed horizontal navbar */
	/* Navbar is positioned 1rem from top, so we need: 1rem + navbar-height + 1rem gap */
	padding-top: calc(1rem + var(--navbar-height) + 1rem);
}

ul,
ol {
	list-style: none;
}

a {
	text-decoration: var(--text-decoration-none);
	color: inherit;
	transition: color var(--transition-duration-fast) ease;
}

img,
picture,
video,
canvas,
svg,
iframe {
	display: block;
	max-width: 100%;
	border: var(--border-none);
}

button,
input,
select,
textarea {
	font: inherit;
	color: inherit;
	background: none;
	border: none;
	outline: none;
	box-shadow: none;
	appearance: none;
}

button {
	cursor: var(--cursor-pointer);
}

:focus:not(:focus-visible) {
	outline: var(--outline-none);
}

[disabled] {
	cursor: var(--cursor-disabled);
	opacity: var(--opacity-disabled);
}

/* === BASE ELEMENT STYLES === */
main {
	padding-top: 0; /* Body already handles navbar spacing */
	padding-bottom: var(--space-l);
}

h1,
h2,
h3,
h4,
h5,
h6 {
	font-family: var(--font-family-base);
	font-weight: var(--font-weight-bold);
	line-height: var(--line-height-heading);
	margin-bottom: var(--space-xs);
}

h1 {
	font-size: var(--font-size-xxl);
}
h2 {
	font-size: var(--font-size-xl);
}
h3 {
	font-size: var(--font-size-lg);
}
h4 {
	font-size: var(--font-size-md);
}
h5 {
	font-size: var(--font-size-sm);
}
h6 {
	font-size: var(--font-size-xs);
}

a {
	color: var(--color-link);
	transition: color var(--transition-duration-fast) ease;
}

a:hover {
	color: var(--color-link-hover);
}

strong,
b {
	font-weight: var(--font-weight-bold);
}
em,
i {
	font-style: italic;
}

/* === UTILITY CLASSES === */
.sr-only {
	position: var(--position-absolute);
	width: var(--size-1px);
	height: var(--size-1px);
	padding: var(--space-none);
	margin: var(--space-negative-1px);
	overflow: var(--overflow-hidden);
	clip: var(--clip-rect);
	white-space: var(--white-space-nowrap);
	border-width: var(--border-width-none);
}

/* Archived unnecessary files and cleaned up the workspace */

/* === UNIFIED BUTTON SYSTEM === */
/* Implemented from the ground up using design tokens */

/* Base button styles */
button,
.btn,
.button {
	/* Typography */
	font-family: var(--button-font-family);
	font-size: var(--button-font-size);
	font-weight: var(--button-font-weight);
	line-height: var(--button-line-height);
	letter-spacing: var(--button-letter-spacing);

	/* Layout */
	display: inline-flex;
	align-items: center;
	justify-content: center;
	gap: 0.5rem;
	padding: var(--button-padding-y) var(--button-padding-x);
	min-height: var(--button-min-height);

	/* Visual */
	background: var(--button-bg);
	color: var(--button-text);
	border: var(--button-border-width) solid var(--button-border);
	border-radius: var(--button-border-radius);
	box-shadow: var(--button-shadow);

	/* Interaction */
	cursor: pointer;
	user-select: none;
	text-decoration: none;
	transition: all 0.2s ease;

	/* Reset browser defaults */
	appearance: none;
	outline: none;
}

/* Button hover state */
button:hover,
.btn:hover,
.button:hover {
	background: var(--button-bg-hover);
	color: var(--button-text-hover);
	border-color: var(--button-border-hover);
	box-shadow: var(--button-shadow-hover);
	transform: translateY(-1px);
}

/* Button focus state */
button:focus-visible,
.btn:focus-visible,
.button:focus-visible {
	outline: var(--button-outline-focus);
	outline-offset: var(--button-outline-offset);
}

/* Button active/pressed state */
button:active,
.btn:active,
.button:active {
	transform: translateY(0);
	box-shadow: var(--button-shadow-active);
}

/* Pill button variant */
.pill {
	/* Inherit all base button styles */
	font-family: var(--button-font-family);
	font-size: var(--button-font-size);
	font-weight: var(--button-font-weight);
	line-height: var(--button-line-height);
	letter-spacing: var(--button-letter-spacing);

	display: inline-flex;
	align-items: center;
	justify-content: center;
	gap: 0.5rem;
	padding: var(--button-padding-y) var(--button-padding-x);
	min-height: var(--button-min-height);

	background: var(--button-bg);
	color: var(--button-text);
	border: var(--button-border-width) solid var(--button-border);
	border-radius: var(--button-border-radius);
	box-shadow: var(--button-shadow);

	cursor: pointer;
	user-select: none;
	text-decoration: none;
	transition: all 0.2s ease;
	appearance: none;
	outline: none;
}

.pill:hover {
	background: var(--button-bg-hover);
	color: var(--button-text-hover);
	border-color: var(--button-border-hover);
	box-shadow: var(--button-shadow-hover);
	transform: translateY(-1px);
}

.pill:focus-visible {
	outline: var(--button-outline-focus);
	outline-offset: var(--button-outline-offset);
}

.pill:active {
	transform: translateY(0);
	box-shadow: var(--button-shadow-active);
}

/* Pill active/selected state */
.pill[data-active="true"],
.pill.active {
	background: var(--button-bg-active);
	color: var(--button-text-active);
	border-color: var(--button-border-active);
	box-shadow: var(--button-shadow-active);
}

/* Glyph button variant */
.glyph {
	/* Inherit all base button styles */
	font-family: var(--button-font-family);
	font-size: var(--glyph-font-size);
	font-weight: var(--button-font-weight);
	line-height: var(--button-line-height);

	display: inline-flex;
	align-items: center;
	justify-content: center;
	width: var(--glyph-size);
	height: var(--glyph-size);
	padding: 0;

	background: var(--button-bg);
	color: var(--button-text);
	border: var(--button-border-width) solid var(--button-border);
	border-radius: var(--button-border-radius);
	box-shadow: var(--button-shadow);

	cursor: pointer;
	user-select: none;
	text-decoration: none;
	transition: all 0.2s ease;
	appearance: none;
	outline: none;
}

.glyph:hover {
	background: var(--button-bg-hover);
	color: var(--button-text-hover);
	border-color: var(--button-border-hover);
	box-shadow: var(--button-shadow-hover);
	transform: translateY(-1px);
}

.glyph:focus-visible {
	outline: var(--button-outline-focus);
	outline-offset: var(--button-outline-offset);
}

.glyph:active {
	transform: translateY(0);
	box-shadow: var(--button-shadow-active);
}

/* Glyph active/selected state */
.glyph[data-active="true"],
.glyph.active {
	background: var(--button-bg-active);
	color: var(--button-text-active);
	border-color: var(--button-border-active);
	box-shadow: var(--button-shadow-active);
}

/* Button disabled state */
button:disabled,
.btn:disabled,
.button:disabled,
.pill:disabled,
.glyph:disabled {
	background: var(--button-bg-disabled);
	color: var(--button-text-disabled);
	border-color: var(--button-border-disabled);
	cursor: not-allowed;
	opacity: 0.6;
	transform: none !important;
	box-shadow: none;
}

/* Clean post date styling */
.post-date-timeline {
	display: inline-flex;
	align-items: baseline;
	gap: 0.2em;
	font-size: 0.85em;
	color: rgba(var(--color-text-rgb, 24, 28, 23), 0.7);
}

.post-date-newest {
	font-weight: 500;
}

.post-date-span {
	font-size: 0.9em;
}

.post-date-arrow {
	font-family: "JetBrains Mono", monospace;
	font-feature-settings: "liga" 1, "calt" 1;
}
